#!/bin/bash

# Script de setup pour environnement de d√©veloppement Airhost
# √Ä ex√©cuter par le d√©veloppeur externe pour configurer son environnement DEV

set -e

echo "üöÄ Configuration de l'environnement de d√©veloppement Airhost"
echo "============================================================"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rifier les pr√©requis
echo ""
info "V√©rification des pr√©requis..."

# Node.js
if ! command -v node &> /dev/null; then
    error "Node.js n'est pas install√©. Veuillez installer Node.js >= 18"
    exit 1
fi

NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    error "Node.js version $NODE_VERSION d√©tect√©e. Version >= 18 requise"
    exit 1
fi
success "Node.js $(node -v) d√©tect√©"

# npm
if ! command -v npm &> /dev/null; then
    error "npm n'est pas install√©"
    exit 1
fi
success "npm $(npm -v) d√©tect√©"

# Git
if ! command -v git &> /dev/null; then
    error "Git n'est pas install√©"
    exit 1
fi
success "Git $(git --version | cut -d' ' -f3) d√©tect√©"

echo ""
info "Tous les pr√©requis sont satisfaits !"

# Configuration de l'environnement
echo ""
info "Configuration de l'environnement de d√©veloppement..."

# Cr√©er le fichier .env pour le frontend
if [ ! -f "frontend/.env" ]; then
    info "Cr√©ation du fichier frontend/.env..."
    cat > frontend/.env << EOF
# Configuration DEV - √Ä personnaliser avec vos propres cl√©s
VITE_SUPABASE_URL=YOUR_DEV_SUPABASE_URL
VITE_SUPABASE_ANON_KEY=YOUR_DEV_SUPABASE_ANON_KEY
VITE_FIREBASE_API_KEY=YOUR_DEV_FIREBASE_API_KEY
VITE_FIREBASE_PROJECT_ID=YOUR_DEV_FIREBASE_PROJECT_ID
VITE_FIREBASE_MESSAGING_SENDER_ID=YOUR_DEV_FIREBASE_MESSAGING_SENDER_ID
VITE_FIREBASE_APP_ID=YOUR_DEV_FIREBASE_APP_ID
EOF
    success "Fichier frontend/.env cr√©√©"
else
    warning "Le fichier frontend/.env existe d√©j√†"
fi

# Installation des d√©pendances frontend
echo ""
info "Installation des d√©pendances frontend..."
cd frontend
npm install
success "D√©pendances frontend install√©es"
cd ..

# Installation des d√©pendances backend (si n√©cessaire)
if [ -d "backend" ] && [ -f "backend/package.json" ]; then
    echo ""
    info "Installation des d√©pendances backend..."
    cd backend
    npm install
    success "D√©pendances backend install√©es"
    cd ..
fi

# Installation des d√©pendances scripts (si n√©cessaire)
if [ -d "scripts" ] && [ -f "scripts/package.json" ]; then
    echo ""
    info "Installation des d√©pendances scripts..."
    cd scripts
    npm install
    success "D√©pendances scripts install√©es"
    cd ..
fi

# Afficher les instructions de configuration
echo ""
echo "üîß CONFIGURATION REQUISE"
echo "========================"
echo ""
warning "IMPORTANT: Vous devez maintenant configurer vos propres services !"
echo ""
echo "1. üìä SUPABASE (Obligatoire)"
echo "   - Cr√©ez un nouveau projet sur https://supabase.com"
echo "   - Nom sugg√©r√©: 'airhost-dev-[votre-nom]'"
echo "   - Copiez l'URL et la cl√© ANON dans frontend/.env"
echo "   - Ex√©cutez les migrations SQL dans l'√©diteur Supabase"
echo ""
echo "2. ü§ñ OPENAI (Obligatoire pour l'IA)"
echo "   - Cr√©ez un compte sur https://platform.openai.com"
echo "   - G√©n√©rez une cl√© API avec quota limit√© (ex: 50$)"
echo "   - Configurez la cl√© dans vos Edge Functions Supabase"
echo ""
echo "3. üì± WHATSAPP (Optionnel pour les tests)"
echo "   - Cr√©ez une app de test sur Meta Business"
echo "   - Utilisez des num√©ros de test uniquement"
echo "   - Configurez le webhook vers votre Supabase"
echo ""
echo "4. üîî FIREBASE (Optionnel pour les notifications)"
echo "   - Cr√©ez un projet sur https://console.firebase.google.com"
echo "   - Activez Cloud Messaging"
echo "   - Copiez les cl√©s dans frontend/.env"
echo ""

# Afficher les commandes de d√©veloppement
echo "üöÄ COMMANDES DE D√âVELOPPEMENT"
echo "============================="
echo ""
echo "# Lancer le frontend en d√©veloppement"
echo "cd frontend && npm run dev"
echo ""
echo "# Build du frontend"
echo "cd frontend && npm run build"
echo ""
echo "# Tests (si configur√©s)"
echo "npm test"
echo ""

# Afficher les liens utiles
echo "üìö RESSOURCES UTILES"
echo "===================="
echo ""
echo "‚Ä¢ Documentation: README.md"
echo "‚Ä¢ Guide de s√©curit√©: SECURITY-GUIDE.md"
echo "‚Ä¢ Variables d'environnement: env-config.example"
echo "‚Ä¢ Structure de la DB: docs/database-structure.md"
echo "‚Ä¢ Repository GitHub: https://github.com/Xprriacst/airhost-clean"
echo ""

# V√©rifications finales
echo "üîç V√âRIFICATIONS FINALES"
echo "========================"
echo ""

# V√©rifier si le build fonctionne
info "Test du build frontend..."
cd frontend
if npm run build > /dev/null 2>&1; then
    success "Build frontend r√©ussi"
else
    warning "Erreur de build - v√©rifiez la configuration"
fi
cd ..

echo ""
success "Configuration de l'environnement de d√©veloppement termin√©e !"
echo ""
warning "N'oubliez pas de:"
warning "1. Configurer vos cl√©s API dans frontend/.env"
warning "2. Cr√©er votre projet Supabase DEV"
warning "3. Ex√©cuter les migrations SQL"
warning "4. Lire le SECURITY-GUIDE.md"
echo ""
info "Une fois configur√©, lancez: cd frontend && npm run dev"
